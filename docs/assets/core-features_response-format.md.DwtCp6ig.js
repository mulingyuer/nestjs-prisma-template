import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.ntVCDD8b.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"core-features/response-format.md","filePath":"core-features/response-format.md"}'),p={name:"core-features/response-format.md"},l=n(`<h2 id="接口响应格式" tabindex="-1">接口响应格式 <a class="header-anchor" href="#接口响应格式" aria-label="Permalink to &quot;接口响应格式&quot;">​</a></h2><p>所有正常的接口请求都会通过统一的拦截器<code>ResponseInterceptor</code>做统一的响应格式处理，统一返回格式为：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;code&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">200</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;message&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;成功&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;data&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#D19A66;--shiki-light:#0184BC;">null</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>拦截器路径：<code>src\\common\\interceptors\\response\\response.interceptor.ts</code></p><p>拦截器在<code>shared</code>模块中全局注册，所有模块都可以使用。</p><p>拦截器最终会调用<code>Result.success()</code>静态方法，生成统一的响应对象。</p><h2 id="状态码" tabindex="-1">状态码 <a class="header-anchor" href="#状态码" aria-label="Permalink to &quot;状态码&quot;">​</a></h2><p>遵循RESTful API规范，post请求的状态码为201，但是我们在业务中一般都是默认200为成功，所以拦截器会默认将post的状态码201改为200。</p><p><code>ResponseInterceptor</code>实际上它只会处理成功的请求，所以它的code字段永远都是200，message为成功。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// app.controller.ts</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">Controller</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">Get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;@nestjs/common&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">AppService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;./app.service&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">Public</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;@/common/decorators&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">@</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Controller</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> AppController</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> constructor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">private</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> readonly</span><span style="--shiki-dark:#E06C75;--shiki-light:#383A42;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> appService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> AppService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> @</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> @</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Public</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> getHello</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0184BC;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">  return</span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;"> this</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">appService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">getHello</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">();</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// app.service.ts</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">Injectable</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;@nestjs/common&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">@</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Injectable</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> AppService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> getHello</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0184BC;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">  return</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;Hello World!&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在具体的业务中，我们return具体的返回值即可，code和message会自动处理。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;data&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;Hello World!&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;message&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;成功&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">  &quot;code&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">200</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="自定义响应格式" tabindex="-1">自定义响应格式 <a class="header-anchor" href="#自定义响应格式" aria-label="Permalink to &quot;自定义响应格式&quot;">​</a></h2><p>事实上你也可以return一个符合上面返回格式的对象。</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// app.service.ts</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">Injectable</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> } </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">from</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;@nestjs/common&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">@</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Injectable</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> AppService</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> getHello</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">()</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0184BC;"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">  return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">    code</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 200</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">    message</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;成功&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">    data</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;Hello World!&quot;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>这种情况我也是有做兼容的，但是不建议这么做，不利于后续维护。</p>`,18),e=[l];function t(h,k,r,d,B,c){return a(),i("div",null,e)}const g=s(p,[["render",t]]);export{A as __pageData,g as default};
