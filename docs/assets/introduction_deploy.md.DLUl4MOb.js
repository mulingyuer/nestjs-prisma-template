import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.ntVCDD8b.js";const y=JSON.parse('{"title":"打包部署","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/deploy.md","filePath":"introduction/deploy.md"}'),p={name:"introduction/deploy.md"},e=n(`<h1 id="打包部署" tabindex="-1">打包部署 <a class="header-anchor" href="#打包部署" aria-label="Permalink to &quot;打包部署&quot;">​</a></h1><p>本节将介绍如何将 NestJS 项目部署到服务器上。</p><h2 id="项目打包" tabindex="-1">项目打包 <a class="header-anchor" href="#项目打包" aria-label="Permalink to &quot;项目打包&quot;">​</a></h2><p>部署之前我们先将项目进行打包，目前打包分两个派系，一种是使用 webpack 打包，另一种是使用 Nest CLI 打包。</p><p>webpack打包会将所有代码（包括依赖项）打包到js文件中，类似于我们SPA项目的打包方式，但是这种方式打包配置上官方并没有文档，所以不推荐使用，大佬可以自行研究。</p><p>Nest CLI 打包会将项目编译成js文件，他们依旧会依赖于node_modules文件夹，所以在服务器上你也需要安装依赖，然后通过PM2来启动应用。</p><p>打包之前我们需要确认存在生产使用的环境变量文件：<code>.env.production</code></p><p>文件存在并且配置正确后，我们可以执行以下命令进行安装依赖：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pnpm</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后执行打包命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pnpm</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> build:all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>该命令会先读取<code>.env.production</code>文件，然后运行prisma的同步数据库命令进行数据库同步和生成prisma client，然后使用Nest CLI进行编译打包。</p><p>打包完成后，我们会在<code>dist</code>文件夹下看到编译后的js文件。</p><h2 id="安装-pm2" tabindex="-1">安装 PM2 <a class="header-anchor" href="#安装-pm2" aria-label="Permalink to &quot;安装 PM2&quot;">​</a></h2><p>在服务器上安装Node之后，我们需要安装 PM2 来运行管理 NestJS 应用。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">npm</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> install</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> pm2</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装完毕后我们需要将PM2设置成持久化启动，这样即使服务器重启，PM2也会自动启动应用。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pm2</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> startup</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不同的系统可能返回的提示不同，大家根据自己的实际情况进行操作即可。</p><p>具体内容可以参考官方文档：<a href="https://pm2.keymetrics.io/docs/usage/startup/" target="_blank" rel="noreferrer">https://pm2.keymetrics.io/docs/usage/startup/</a></p><h2 id="生成pm2配置文件" tabindex="-1">生成PM2配置文件 <a class="header-anchor" href="#生成pm2配置文件" aria-label="Permalink to &quot;生成PM2配置文件&quot;">​</a></h2><p>我们需要在项目根目录下创建一个<code>ecosystem.config.js</code>文件，在项目目录下执行以下命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pm2</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> init</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> simple</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时他会在项目根目录下生成一个<code>ecosystem.config.js</code>文件，我目前提供了一个示例文件，大家可以根据自己的实际情况进行修改。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">module</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">exports</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;"> apps</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> [</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  {</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;nest-prisma-template&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   exec_mode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;cluster&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">//开启集群</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   instances</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;2&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 需要启动的实例数量，max是pm2自动配置，如果设置为max一般会根据cpu核数来设置</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   max_memory_restart</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;512M&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 内存限制重新加载</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   autorestart</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 发生异常的情况下自动重启</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   min_uptime</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;60s&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 应用运行少于时间被认为是异常启动</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   max_restarts</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 30</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 最大异常重启次数</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   restart_delay</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 60</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">// 异常重启情况下，延时重启时间</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   script</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;./dist/src/main.js&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">   env_production</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-light:#A0A1A7;--shiki-dark-font-style:italic;--shiki-light-font-style:italic;">    /** 模式 */</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">    NODE_ENV</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;production&quot;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">   }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ]</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>其中<code>env_production</code>配置了NODE_ENV用于指定当前运行环境模式和环境文件。</p><p><code>script</code>用于指定启动的js文件，这里我们指定的是编译后的js文件。</p><p><code>name</code>也挺重要的，我们使用了集群，可以通过name来快速指定集群应用，方便管理（不可重名）。</p><h2 id="启动应用" tabindex="-1">启动应用 <a class="header-anchor" href="#启动应用" aria-label="Permalink to &quot;启动应用&quot;">​</a></h2><p>在项目根目录下执行以下命令启动应用：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pm2</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> start</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ecosystem.config.js</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> --env</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样就会启动应用并使用<code>env_production</code>配置的环境变量。</p><p>如果使用的是我默认文件，那么它就会启动2个实例应用。</p><h2 id="查看应用列表" tabindex="-1">查看应用列表 <a class="header-anchor" href="#查看应用列表" aria-label="Permalink to &quot;查看应用列表&quot;">​</a></h2><p>通过列表我们可以查看当前运行的应用，以及应用的状态。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pm2</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输出示例：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">┌────┬─────────────────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">│</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> id</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> name</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">                    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> namespace</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">   │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> version</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> mode</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> pid</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> uptime</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ↺</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> status</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> cpu</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> mem</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> user</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">     │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> watching</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">├────┼─────────────────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">│</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">  │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> nest-prisma-template</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> default</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">     │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.0.1</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">   │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> cluster</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 34332</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 5m</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">     │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> online</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0%</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">       │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 86.6mb</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">   │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> mul…</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> disabled</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">│</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 1</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">  │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> nest-prisma-template</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> default</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">     │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.0.1</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">   │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> cluster</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 34756</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 5m</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">     │</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> online</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0%</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">       │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 86.2mb</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">   │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> mul…</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> disabled</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> │</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">└────┴─────────────────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="停止应用" tabindex="-1">停止应用 <a class="header-anchor" href="#停止应用" aria-label="Permalink to &quot;停止应用&quot;">​</a></h2><p>通过以下命令停止应用：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro one-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">pm2</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> stop</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> nest-prisma-template</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>nest-prisma-template</code>是我们在<code>ecosystem.config.js</code>文件中配置的应用名称。</p><h2 id="域名访问" tabindex="-1">域名访问 <a class="header-anchor" href="#域名访问" aria-label="Permalink to &quot;域名访问&quot;">​</a></h2><p>由于Node本身是没法绑定域名的，所以我们如果想通过域名访问，还得借助Nginx来处理，这里就不再赘述了，大家可以自行搜索相关资料。</p><p>一般公司环境下，交给专门的运维人员处理就行。</p>`,45),l=[e];function t(h,k,r,d,o,c){return a(),i("div",null,l)}const A=s(p,[["render",t]]);export{y as __pageData,A as default};
